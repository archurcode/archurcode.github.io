<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Jetpack Compose入门</title>
    <link href="/2022/09/13/Jetpack-Compose%E5%85%A5%E9%97%A8/"/>
    <url>/2022/09/13/Jetpack-Compose%E5%85%A5%E9%97%A8/</url>
    
    <content type="html"><![CDATA[<p>Jetpack Compose是构建Android native UI的新型工具，由kotlin实现，composable function是最小的UI构建单元<span id="more"></span></p><blockquote><p>下面代码块展示如何使用composable function绘制一个简单的text </p></blockquote><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-keyword">class</span> <span class="hljs-title class_">MainActivity</span> : <span class="hljs-type">AppCompatActivity</span>() &#123;<br>  <span class="hljs-keyword">override</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">onCreate</span><span class="hljs-params">(savedInstanceState: <span class="hljs-type">Bundle</span>?)</span></span> &#123;<br>    <span class="hljs-keyword">super</span>.onCreate(savedInstanceState)<br>    setContent &#123;<br>        Greeting(<span class="hljs-string">&quot;World&quot;</span>)<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class="hljs-meta">@Composable</span><br><span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">GreetingWorld</span><span class="hljs-params">()</span></span> &#123;<br>  Text(text = <span class="hljs-string">&quot;Hello world!&quot;</span>)<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>上面代码中的GreetingWorld就是一个composable function，里面使用一个Text展示一行文本‘Hello world!’，Text功能类似TextView，<strong>与以前的UI不同之处在于不使用xml构建而是全部使用composable function实现</strong>；如果点进Text方法，可以看到Text也是一个composable function，方法参数如下</p></blockquote><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-meta">@Composable</span><br><span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">Text</span><span class="hljs-params">(</span></span><br><span class="hljs-params"><span class="hljs-function">    text: <span class="hljs-type">String</span>,</span></span><br><span class="hljs-params"><span class="hljs-function">    modifier: <span class="hljs-type">Modifier</span> = Modifier,</span></span><br><span class="hljs-params"><span class="hljs-function">    color: <span class="hljs-type">Color</span> = Color.Unspecified,</span></span><br><span class="hljs-params"><span class="hljs-function">    fontSize: <span class="hljs-type">TextUnit</span> = TextUnit.Unspecified,</span></span><br><span class="hljs-params"><span class="hljs-function">    fontStyle: <span class="hljs-type">FontStyle</span>? = <span class="hljs-literal">null</span>,</span></span><br><span class="hljs-params"><span class="hljs-function">    fontWeight: <span class="hljs-type">FontWeight</span>? = <span class="hljs-literal">null</span>,</span></span><br><span class="hljs-params"><span class="hljs-function">    fontFamily: <span class="hljs-type">FontFamily</span>? = <span class="hljs-literal">null</span>,</span></span><br><span class="hljs-params"><span class="hljs-function">    letterSpacing: <span class="hljs-type">TextUnit</span> = TextUnit.Unspecified,</span></span><br><span class="hljs-params"><span class="hljs-function">    textDecoration: <span class="hljs-type">TextDecoration</span>? = <span class="hljs-literal">null</span>,</span></span><br><span class="hljs-params"><span class="hljs-function">    textAlign: <span class="hljs-type">TextAlign</span>? = <span class="hljs-literal">null</span>,</span></span><br><span class="hljs-params"><span class="hljs-function">    lineHeight: <span class="hljs-type">TextUnit</span> = TextUnit.Unspecified,</span></span><br><span class="hljs-params"><span class="hljs-function">    overflow: <span class="hljs-type">TextOverflow</span> = TextOverflow.Clip,</span></span><br><span class="hljs-params"><span class="hljs-function">    softWrap: <span class="hljs-type">Boolean</span> = <span class="hljs-literal">true</span>,</span></span><br><span class="hljs-params"><span class="hljs-function">    maxLines: <span class="hljs-type">Int</span> = <span class="hljs-built_in">Int</span>.MAX_VALUE,</span></span><br><span class="hljs-params"><span class="hljs-function">    onTextLayout: (<span class="hljs-type">TextLayoutResult</span>) -&gt; <span class="hljs-type">Unit</span> = &#123;&#125;,</span></span><br><span class="hljs-params"><span class="hljs-function">    style: <span class="hljs-type">TextStyle</span> = LocalTextStyle.current</span></span><br><span class="hljs-params"><span class="hljs-function">)</span></span><br></code></pre></td></tr></table></figure><p>万物皆Composable function</p><img src="/2022/09/13/Jetpack-Compose%E5%85%A5%E9%97%A8/function.jpg" class="" width="300"><h2 id="Jetpack-Compose基础UI组件"><a href="#Jetpack-Compose基础UI组件" class="headerlink" title="Jetpack Compose基础UI组件"></a>Jetpack Compose基础UI组件</h2><h3 id="Text-TextView"><a href="#Text-TextView" class="headerlink" title="Text (TextView)"></a>Text (TextView)</h3><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-variable">@Preview</span> <span class="hljs-comment">//加上该注解，可以在android studio中预览效果</span><br><span class="hljs-variable">@Composable</span><br>fun <span class="hljs-built_in">MyText</span>() &#123;<br>  <span class="hljs-selector-tag">Text</span>(text = <span class="hljs-built_in">stringResource</span>(id = R.string.jetpack_compose), <span class="hljs-comment">//文本内容</span><br>      fontStyle = FontStyle.Italic, <span class="hljs-comment">//斜体</span><br>      fontSize = <span class="hljs-number">30</span>.sp, <span class="hljs-comment">//字大小</span><br>      color = <span class="hljs-built_in">colorResource</span>(id = R.<span class="hljs-attribute">color</span>.colorPrimary), <span class="hljs-comment">//颜色</span><br>      fontWeight = FontWeight.Bold <span class="hljs-comment">//粗体</span><br>  )<br>&#125;<br></code></pre></td></tr></table></figure><img src="/2022/09/13/Jetpack-Compose%E5%85%A5%E9%97%A8/text.jpg" class="" width="200"><blockquote><p>上面代码中的stringResource以及colorResource都是为了从资源文件获取对应的值，通过他们的实现可以看出是对以前获取资源值的一种封装</p></blockquote><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-meta">@Composable</span><br><span class="hljs-meta">@ReadOnlyComposable</span><br><span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">stringResource</span><span class="hljs-params">(<span class="hljs-meta">@StringRes</span> id: <span class="hljs-type">Int</span>)</span></span>: String &#123;<br>    <span class="hljs-keyword">val</span> resources = resources()<br>    <span class="hljs-keyword">return</span> resources.getString(id)<br>&#125;<br><br><span class="hljs-meta">@Composable</span><br><span class="hljs-meta">@ReadOnlyComposable</span><br><span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">colorResource</span><span class="hljs-params">(<span class="hljs-meta">@ColorRes</span> id: <span class="hljs-type">Int</span>)</span></span>: Color &#123;<br>    <span class="hljs-keyword">val</span> context = LocalContext.current<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">if</span> (Build.VERSION.SDK_INT &gt;= <span class="hljs-number">23</span>) &#123;<br>        Color(context.resources.getColor(id, context.theme))<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-meta">@Suppress(<span class="hljs-string">&quot;DEPRECATION&quot;</span>)</span><br>        Color(context.resources.getColor(id))<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="TextField-EditText"><a href="#TextField-EditText" class="headerlink" title="TextField (EditText)"></a>TextField (EditText)</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs stylus">@Preview<br>@Composable<br>fun <span class="hljs-built_in">MyTextField</span>() &#123;<br>    val textValue = remember &#123; <span class="hljs-built_in">mutableStateOf</span>(<span class="hljs-string">&quot;&quot;</span>) &#125;<br>    val primaryColor = <span class="hljs-built_in">colorResource</span>(id = R<span class="hljs-selector-class">.color</span>.colorPrimary)<br>    <span class="hljs-built_in">OutlinedTextField</span>(<br>        <span class="hljs-selector-tag">label</span> = &#123; <span class="hljs-built_in">Text</span>(text = <span class="hljs-built_in">stringResource</span>(id = R<span class="hljs-selector-class">.string</span>.email)) &#125;, <span class="hljs-comment">//类似hint，但是在获得焦点后，该label也会显示在左上方</span><br>        colors = TextFieldDefaults<span class="hljs-selector-class">.outlinedTextFieldColors</span>(<br>            focusedBorderColor = primaryColor,<br>            focusedLabelColor = primaryColor,<br>            cursorColor = primaryColor<br>        ),<br>        keyboardOptions = KeyboardOptions<span class="hljs-selector-class">.Default</span><span class="hljs-selector-class">.copy</span>(keyboardType = KeyboardType.Email),<br>        value = textValue<span class="hljs-selector-class">.value</span>,<br>        onValueChange = &#123;<br>            textValue<span class="hljs-selector-class">.value</span> = it<br>        &#125;,<br>    )<br>&#125;<br></code></pre></td></tr></table></figure><img src="/2022/09/13/Jetpack-Compose%E5%85%A5%E9%97%A8/textfield1.jpg" class="" width="200"> <img src="/2022/09/13/Jetpack-Compose%E5%85%A5%E9%97%A8/textfield2.jpg" class="" width="200"><h3 id="Button-Button"><a href="#Button-Button" class="headerlink" title="Button (Button)"></a>Button (Button)</h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-meta">@Preview</span><br><span class="hljs-meta">@Composable</span><br><span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">MyButton</span><span class="hljs-params">()</span></span> &#123; <span class="hljs-comment">//普通按钮</span><br>    Button(onClick = &#123;&#125;, <br>        colors = ButtonDefaults.buttonColors(backgroundColor = colorResource(id = R.color.colorPrimary)),<br>        border = BorderStroke(<span class="hljs-number">1.</span>dp, color = colorResource(id = R.color.colorPrimaryDark))<br>        )<br>    &#123;<br>        Text(text = stringResource(id = R.string.button_text), color = Color.White)<br>    &#125;<br>&#125;<br><br><span class="hljs-meta">@Composable</span><br><span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">MyRadioGroup</span><span class="hljs-params">()</span></span> &#123; <span class="hljs-comment">// 单选按钮</span><br>    <span class="hljs-keyword">val</span> radioButtons = listOf(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>) <span class="hljs-comment">// 1</span><br>    <span class="hljs-keyword">val</span> selectedButton = remember &#123; mutableStateOf(radioButtons.first()) &#125; <span class="hljs-comment">// 2</span><br>    Column &#123; <span class="hljs-comment">// 类似垂直布局的LinearLayout</span><br>        radioButtons.forEach &#123; index -&gt; <span class="hljs-comment">// 3</span><br>            <span class="hljs-keyword">val</span> isSelected = index == selectedButton.value<br>            <span class="hljs-keyword">val</span> colors = RadioButtonDefaults.colors( <span class="hljs-comment">// 4</span><br>                selectedColor = colorResource(id = R.color.colorPrimary),<br>                unselectedColor = colorResource(id = R.color.colorPrimaryDark),<br>                disabledColor = Color.LightGray<br>            )<br>            RadioButton( <span class="hljs-comment">// 单选按钮</span><br>                colors = colors,<br>                selected = isSelected,<br>                onClick = &#123; selectedButton.value = index &#125; <span class="hljs-comment">// 6</span><br>            )<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-meta">@Composable</span><br><span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">MyFloatingActionButton</span><span class="hljs-params">()</span></span> &#123; <span class="hljs-comment">// 悬浮按钮</span><br>    FloatingActionButton(<br>        onClick = &#123;&#125;,<br>        backgroundColor = colorResource(id =<br>        R.color.colorPrimary),<br>        contentColor = Color.White,<br>        content = &#123;<br>            Icon(Icons.Filled.Favorite, contentDescription = <span class="hljs-string">&quot;Test FAB&quot;</span>)<br>        &#125;<br>    )<br>&#125;<br></code></pre></td></tr></table></figure><p>按钮的点击事件均在onClick参数里处理</p><img src="/2022/09/13/Jetpack-Compose%E5%85%A5%E9%97%A8/button.jpg" class="" width="200"> <h3 id="ProgressIndicator"><a href="#ProgressIndicator" class="headerlink" title="ProgressIndicator"></a>ProgressIndicator</h3><p>两种进度条：环状和横条状</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-meta">@Composable</span><br><span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">ProgressIndicatorScreen</span><span class="hljs-params">()</span></span> &#123;<br><br>    Column(<br>        modifier = Modifier.fillMaxSize(),<br>        horizontalAlignment = Alignment.CenterHorizontally,<br>        verticalArrangement = Arrangement.Center<br>    ) &#123;<br>        CircularProgressIndicator(<br>            color = colorResource(id = R.color.colorPrimary),<br>            strokeWidth = <span class="hljs-number">5.</span>dp<br>        )<br>        LinearProgressIndicator(progress = <span class="hljs-number">0.5f</span>)<br>    &#125;<br><br>    BackButtonHandler &#123;<br>        JetFundamentalsRouter.navigateTo(Screen.Navigation)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><img src="/2022/09/13/Jetpack-Compose%E5%85%A5%E9%97%A8/ProgressIndicator.jpg" class="" width="200"> <h3 id="Dialog"><a href="#Dialog" class="headerlink" title="Dialog"></a>Dialog</h3><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">@Composable<br>fun MyAlertDialog<span class="hljs-params">()</span> &#123;<br>    val shouldShowDialog = remember &#123; mutableStateOf<span class="hljs-params">(true)</span> &#125; <span class="hljs-string">//</span> 1<br>    <span class="hljs-keyword">if</span> <span class="hljs-params">(shouldShowDialog.value)</span> &#123; <span class="hljs-string">//</span> 2<br>        AlertDialog<span class="hljs-params">( // 对话框</span><br><span class="hljs-params">            <span class="hljs-attr">onDismissRequest</span> = &#123; // 4</span><br><span class="hljs-params">                shouldShowDialog.<span class="hljs-attr">value</span> = false</span><br><span class="hljs-params">                JetFundamentalsRouter.navigateTo(Screen.Navigation)</span><br>            &#125;, <span class="hljs-string">//</span> 5<br>            title = &#123; Text<span class="hljs-params">(<span class="hljs-attr">text</span> = stringResource(<span class="hljs-attr">id</span> = R.string.alert_dialog_title)</span>) &#125;, <span class="hljs-string">//</span> 标题<br>            text = &#123; Text<span class="hljs-params">(<span class="hljs-attr">text</span> = stringResource(<span class="hljs-attr">id</span> = R.string.alert_dialog_text)</span>) &#125;, <span class="hljs-string">//</span> 内容<br>            confirmButton = &#123; <span class="hljs-string">//</span> 确认按钮<br>                Button<span class="hljs-params">(</span><br><span class="hljs-params">                    <span class="hljs-attr">colors</span> = ButtonDefaults.buttonColors(<span class="hljs-attr">backgroundColor</span> = colorResource(<span class="hljs-attr">id</span> = R.color.colorPrimary)</span>),<br>                    onClick = &#123;<br>                        shouldShowDialog.value = <span class="hljs-literal">false</span><br>                        JetFundamentalsRouter.navigateTo<span class="hljs-params">(Screen.Navigation)</span><br>                    &#125;<br>                ) &#123;<br>                    Text<span class="hljs-params">(<span class="hljs-attr">text</span> = stringResource(<span class="hljs-attr">id</span> = R.string.confirm)</span>, color = Color.White)<br>                &#125;<br>            &#125;,<br>            dismissButton = &#123; <span class="hljs-string">//</span> 取消按钮<br>                Button<span class="hljs-params">(</span><br><span class="hljs-params">                    <span class="hljs-attr">colors</span> = ButtonDefaults.buttonColors(<span class="hljs-attr">backgroundColor</span> = colorResource(<span class="hljs-attr">id</span> = R.color.colorPrimary)</span>),<br>                    onClick = &#123;<br>                        shouldShowDialog.value = <span class="hljs-literal">false</span><br>                        JetFundamentalsRouter.navigateTo<span class="hljs-params">(Screen.Navigation)</span><br>                    &#125;<br>                ) &#123;<br>                    Text<span class="hljs-params">(<span class="hljs-attr">text</span> = stringResource(<span class="hljs-attr">id</span> = R.string.cancel)</span>, color = Color.White)<br>                &#125;<br>            &#125;<br>        )<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><img src="/2022/09/13/Jetpack-Compose%E5%85%A5%E9%97%A8/dialog.jpg" class="" width="200"> <h2 id="Jetpack-Compose-布局组件"><a href="#Jetpack-Compose-布局组件" class="headerlink" title="Jetpack Compose 布局组件"></a>Jetpack Compose 布局组件</h2><h3 id="Row"><a href="#Row" class="headerlink" title="Row"></a>Row</h3><p>类似水平方向布局的LinearLayout</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs stylus">fun <span class="hljs-built_in">MyRow</span>() &#123;<br>  <span class="hljs-built_in">Row</span>(verticalAlignment = Alignment<span class="hljs-selector-class">.CenterVertically</span>, <span class="hljs-comment">// 垂直居中</span><br>    horizontalArrangement = Arrangement<span class="hljs-selector-class">.SpaceEvenly</span>, <span class="hljs-comment">// 水平间隔等距</span><br>    modifier = Modifier<span class="hljs-selector-class">.fillMaxSize</span>()) &#123;<br>      THREE_ELEMENT_LIST<span class="hljs-selector-class">.forEach</span> &#123; textResId -&gt;<br>        <span class="hljs-built_in">Text</span>(<br>          text = <span class="hljs-built_in">stringResource</span>(id = textResId),<br>          fontSize = <span class="hljs-number">18</span><span class="hljs-selector-class">.sp</span><br>        )<br>      &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>需要注意的是horizontalArrangement的这三种取值：SpaceBetween、SpaceEvenly、SpaceAround</p><blockquote><ol><li>SpaceBetween: 第一个子View和最后一个子View分别顶格父容器Row的start和end，中间子view间的间距均相同</li><li>SpaceEvenly：和SpaceBetween类似，不同之处是首尾子View的前后均有间隔，且间隔和中间子View间的间隔相等</li><li>SpaceAround：和SpaceEvenly类似，不同之处是首尾子View的前后间隔是中间子View间的间隔的一半</li></ol></blockquote><p>看的一脸懵逼吧，下面直接上效果图会更直观：</p><img src="/2022/09/13/Jetpack-Compose%E5%85%A5%E9%97%A8/row1.jpg" class="" width="250">  <img src="/2022/09/13/Jetpack-Compose%E5%85%A5%E9%97%A8/row2.jpg" class="" width="250">  <img src="/2022/09/13/Jetpack-Compose%E5%85%A5%E9%97%A8/row3.jpg" class="" width="250"> <h3 id="Column"><a href="#Column" class="headerlink" title="Column"></a>Column</h3><p>用法类似Row，是垂直方向的LinearLayout</p><h3 id="Box"><a href="#Box" class="headerlink" title="Box"></a>Box</h3><p>类似FrameLayout</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/09/09/hello-world/"/>
    <url>/2022/09/09/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
