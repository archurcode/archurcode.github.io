<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Jetpack Compose入门</title>
    <link href="/2022/09/13/Jetpack-Compose%E5%85%A5%E9%97%A8/"/>
    <url>/2022/09/13/Jetpack-Compose%E5%85%A5%E9%97%A8/</url>
    
    <content type="html"><![CDATA[<p>Jetpack Compose是构建Android native UI的新型工具，composable function是最小的UI构建单元<span id="more"></span></p><p>下面代码块展示如何使用composable function绘制一个简单的text</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-keyword">class</span> <span class="hljs-title class_">MainActivity</span> : <span class="hljs-type">AppCompatActivity</span>() &#123;<br>  <span class="hljs-keyword">override</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">onCreate</span><span class="hljs-params">(savedInstanceState: <span class="hljs-type">Bundle</span>?)</span></span> &#123;<br>    <span class="hljs-keyword">super</span>.onCreate(savedInstanceState)<br>    setContent &#123;<br>        Greeting(<span class="hljs-string">&quot;World&quot;</span>)<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class="hljs-meta">@Composable</span><br><span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">GreetingWorld</span><span class="hljs-params">()</span></span> &#123;<br>  Text(text = <span class="hljs-string">&quot;Hello world!&quot;</span>)<br>&#125;<br></code></pre></td></tr></table></figure><p>上面代码中的GreetingWorld就是一个composable function，里面使用一个Text展示一行文本‘Hello world!’，Text功能类似TextView，与以前的UI不同之处在于不使用xml构建而是全部使用composable function实现；如果点进Text方法，可以看到Text也是一个composable function，方法参数如下</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-meta">@Composable</span><br><span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">Text</span><span class="hljs-params">(</span></span><br><span class="hljs-params"><span class="hljs-function">    text: <span class="hljs-type">String</span>,</span></span><br><span class="hljs-params"><span class="hljs-function">    modifier: <span class="hljs-type">Modifier</span> = Modifier,</span></span><br><span class="hljs-params"><span class="hljs-function">    color: <span class="hljs-type">Color</span> = Color.Unspecified,</span></span><br><span class="hljs-params"><span class="hljs-function">    fontSize: <span class="hljs-type">TextUnit</span> = TextUnit.Unspecified,</span></span><br><span class="hljs-params"><span class="hljs-function">    fontStyle: <span class="hljs-type">FontStyle</span>? = <span class="hljs-literal">null</span>,</span></span><br><span class="hljs-params"><span class="hljs-function">    fontWeight: <span class="hljs-type">FontWeight</span>? = <span class="hljs-literal">null</span>,</span></span><br><span class="hljs-params"><span class="hljs-function">    fontFamily: <span class="hljs-type">FontFamily</span>? = <span class="hljs-literal">null</span>,</span></span><br><span class="hljs-params"><span class="hljs-function">    letterSpacing: <span class="hljs-type">TextUnit</span> = TextUnit.Unspecified,</span></span><br><span class="hljs-params"><span class="hljs-function">    textDecoration: <span class="hljs-type">TextDecoration</span>? = <span class="hljs-literal">null</span>,</span></span><br><span class="hljs-params"><span class="hljs-function">    textAlign: <span class="hljs-type">TextAlign</span>? = <span class="hljs-literal">null</span>,</span></span><br><span class="hljs-params"><span class="hljs-function">    lineHeight: <span class="hljs-type">TextUnit</span> = TextUnit.Unspecified,</span></span><br><span class="hljs-params"><span class="hljs-function">    overflow: <span class="hljs-type">TextOverflow</span> = TextOverflow.Clip,</span></span><br><span class="hljs-params"><span class="hljs-function">    softWrap: <span class="hljs-type">Boolean</span> = <span class="hljs-literal">true</span>,</span></span><br><span class="hljs-params"><span class="hljs-function">    maxLines: <span class="hljs-type">Int</span> = <span class="hljs-built_in">Int</span>.MAX_VALUE,</span></span><br><span class="hljs-params"><span class="hljs-function">    onTextLayout: (<span class="hljs-type">TextLayoutResult</span>) -&gt; <span class="hljs-type">Unit</span> = &#123;&#125;,</span></span><br><span class="hljs-params"><span class="hljs-function">    style: <span class="hljs-type">TextStyle</span> = LocalTextStyle.current</span></span><br><span class="hljs-params"><span class="hljs-function">)</span></span><br></code></pre></td></tr></table></figure><p>万物皆Composable function</p><img src="/2022/09/13/Jetpack-Compose%E5%85%A5%E9%97%A8/function.jpg" class="" width="300"><h2 id="Jetpack-Compose常用UI组件"><a href="#Jetpack-Compose常用UI组件" class="headerlink" title="Jetpack Compose常用UI组件"></a>Jetpack Compose常用UI组件</h2><h3 id="Text-TextView"><a href="#Text-TextView" class="headerlink" title="Text (TextView)"></a>Text (TextView)</h3><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-variable">@Preview</span> <span class="hljs-comment">//加上该注解，可以在android studio中预览效果</span><br><span class="hljs-variable">@Composable</span><br>fun <span class="hljs-built_in">MyText</span>() &#123;<br>  <span class="hljs-selector-tag">Text</span>(text = <span class="hljs-built_in">stringResource</span>(id = R.string.jetpack_compose), <span class="hljs-comment">//文本内容</span><br>      fontStyle = FontStyle.Italic, <span class="hljs-comment">//斜体</span><br>      fontSize = <span class="hljs-number">30</span>.sp, <span class="hljs-comment">//字大小</span><br>      color = <span class="hljs-built_in">colorResource</span>(id = R.<span class="hljs-attribute">color</span>.colorPrimary), <span class="hljs-comment">//颜色</span><br>      fontWeight = FontWeight.Bold <span class="hljs-comment">//粗体</span><br>  )<br>&#125;<br></code></pre></td></tr></table></figure><img src="/2022/09/13/Jetpack-Compose%E5%85%A5%E9%97%A8/text.jpg" class="" width="200"><p>上面代码中的stringResource以及colorResource都是为了从资源文件获取对应的值，通过他们的实现可以看出是对以前获取资源值的一种封装</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-meta">@Composable</span><br><span class="hljs-meta">@ReadOnlyComposable</span><br><span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">stringResource</span><span class="hljs-params">(<span class="hljs-meta">@StringRes</span> id: <span class="hljs-type">Int</span>)</span></span>: String &#123;<br>    <span class="hljs-keyword">val</span> resources = resources()<br>    <span class="hljs-keyword">return</span> resources.getString(id)<br>&#125;<br><br><span class="hljs-meta">@Composable</span><br><span class="hljs-meta">@ReadOnlyComposable</span><br><span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">colorResource</span><span class="hljs-params">(<span class="hljs-meta">@ColorRes</span> id: <span class="hljs-type">Int</span>)</span></span>: Color &#123;<br>    <span class="hljs-keyword">val</span> context = LocalContext.current<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">if</span> (Build.VERSION.SDK_INT &gt;= <span class="hljs-number">23</span>) &#123;<br>        Color(context.resources.getColor(id, context.theme))<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-meta">@Suppress(<span class="hljs-string">&quot;DEPRECATION&quot;</span>)</span><br>        Color(context.resources.getColor(id))<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="TextField-EditText"><a href="#TextField-EditText" class="headerlink" title="TextField (EditText)"></a>TextField (EditText)</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs stylus">@Preview<br>@Composable<br>fun <span class="hljs-built_in">MyTextField</span>() &#123;<br>    val textValue = remember &#123; <span class="hljs-built_in">mutableStateOf</span>(<span class="hljs-string">&quot;&quot;</span>) &#125;<br>    val primaryColor = <span class="hljs-built_in">colorResource</span>(id = R<span class="hljs-selector-class">.color</span>.colorPrimary)<br>    <span class="hljs-built_in">OutlinedTextField</span>(<br>        <span class="hljs-selector-tag">label</span> = &#123; <span class="hljs-built_in">Text</span>(text = <span class="hljs-built_in">stringResource</span>(id = R<span class="hljs-selector-class">.string</span>.email)) &#125;,<br>        colors = TextFieldDefaults<span class="hljs-selector-class">.outlinedTextFieldColors</span>(<br>            focusedBorderColor = primaryColor,<br>            focusedLabelColor = primaryColor,<br>            cursorColor = primaryColor<br>        ),<br>        keyboardOptions = KeyboardOptions<span class="hljs-selector-class">.Default</span><span class="hljs-selector-class">.copy</span>(keyboardType = KeyboardType.Email),<br>        value = textValue<span class="hljs-selector-class">.value</span>,<br>        onValueChange = &#123;<br>            textValue<span class="hljs-selector-class">.value</span> = it<br>        &#125;,<br>    )<br>&#125;<br></code></pre></td></tr></table></figure><img src="/2022/09/13/Jetpack-Compose%E5%85%A5%E9%97%A8/textfield1.jpg" class="" width="200"> <img src="/2022/09/13/Jetpack-Compose%E5%85%A5%E9%97%A8/textfield2.jpg" class="" width="200">]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/09/09/hello-world/"/>
    <url>/2022/09/09/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
